library(flowkernel)
set.seed(123)
d <- 1; K <- 2; ntimes <- 200
ex1 <- list(
mu_function = function(times) {
mu <- array(NA, c(ntimes, K, d))
mu[, , 1] <- cbind(sin(2 * pi * times / 30), 2)
mu
},
Sigma_function = function(times) {
Sigma <- array(NA, c(ntimes, K, 1, 1))
Sigma[, , 1, 1] <- 0.25
Sigma
},
pi_function = function(times) {
pi1 <- seq(0.2, 0.8, length=length(times))
cbind(pi1, 1 - pi1)
},
num_points = rep(40, ntimes)
)
ex1$dat <- generate_smooth_gauss_mix(ex1$mu_function,
ex1$Sigma_function,
ex1$pi_function,
ex1$num_points)
d <- 3; K <- 4; ntimes <- 200
ex2 = list(
mu_function = function(times) {
mu <- array(NA, c(ntimes, K, d))
mu[, , 1] <- cbind(0.5*cos(2 * pi * times / 30), 0.3*sin(2 * pi * times / 30), sin(2 * pi * times / 30), -3)
mu[, , 2] = cbind (0.3*sin(2 * pi * times / 30), 2, -1, 0.6*cos(2 * pi * times / 30))
mu[, , 3] = cbind(2, 0.7*cos(2 * pi * times / 30), 0.4*sin(2 * pi * times / 30), 1)
mu
},
Sigma_function = function(times) {
Sigma <- array(NA, c(ntimes, K, d, d))
Sigma[, , 1, 1] <- 0.10
Sigma[, , 1, 2] <- 0
Sigma[, , 1, 3] <- 0
Sigma[, , 2, 1] <- 0
Sigma[, , 2, 2] <- 0.10
Sigma[, , 2, 3] <- 0
Sigma[, , 3, 1] <- 0
Sigma[, , 3, 2] <- 0
Sigma[, , 3, 3] <- 0.10
Sigma
},
pi_function = function(times) {
pi1 <- seq(0.2, 0.3, length=length(times))
cbind(pi1, pi1, 2*pi1/3, 1- (2*pi1 + 2*pi1/3))
},
num_points = rep(150, ntimes)
)
ex2$dat <- generate_smooth_gauss_mix(ex2$mu_function,
ex2$Sigma_function,
ex2$pi_function,
ex2$num_points)
plot_data_and_model(ex2$dat$y, ex2$dat$z, ex2$dat$mu, dim = 1)
plot_data_and_model(ex2$dat$y, ex2$dat$z, ex2$dat$mu, dim = 1, show_data = FALSE)
plot_data_and_model(ex2$dat$y, ex2$dat$z, ex2$dat$mu, dim = 2, show_data = FALSE)
plot_data_and_model(ex2$dat$y, ex2$dat$z, ex2$dat$mu, dim = 3, show_data = FALSE)
library(mclust)
library(plotly)
library(ggplot2)
library(tidyverse)
library(magrittr)
library(dplyr)
#change the directory below to where you have the data saved
grid_file_path <- "C:/Desktop Folders/USC/Academic/Research/paper-data/Justin-gridded-SeaFlow-2022-11-02/2022-11-01-diam-chl-pe-Qc-PSD-combined-popcycle-4.15.0-withoutBoundaryPoints.psd-grid.parquet"
# Read the parquet file
grid <- arrow::read_parquet(grid_file_path)
data_file_path <- "C:/Desktop Folders/USC/Academic/Research/paper-data/Justin-gridded-SeaFlow-2022-11-02/2022-11-01-diam-chl-pe-Qc-PSD-combined-popcycle-4.15.0-withoutBoundaryPoints.psd-hourly.parquet"
psd_hourly <- arrow::read_parquet(data_file_path)
# grid <- arrow::read_parquet("2022-11-01-diam-chl-pe-Qc-PSD-combined-popcycle-4.15.0-withoutBoundaryPoints.psd-grid.parquet")
# #MGL_grid = psd_hourly[grid$cruise == "MGL1704", ]
#
# psd_hourly <- arrow::read_parquet("2022-11-01-diam-chl-pe-Qc-PSD-combined-popcycle-4.15.0-withoutBoundaryPoints.psd-hourly.parquet")
View(psd_hourly)
psd_hourly <- psd_hourly %>%
mutate(diam = grid$diam[psd_hourly$diam_coord],
Qc = grid$Qc[psd_hourly$Qc_coord],
chl_small = grid$chl_small[psd_hourly$chl_small_coord],
pe = grid$pe[psd_hourly$pe_coord]) %>%
select(-c(diam_coord, Qc_coord, chl_small_coord, pe_coord))
MGL1704_data <- psd_hourly[psd_hourly$cruise == "MGL1704", ]
MGL1704_y_list <- MGL1704_data %>%
group_by(date) %>%
group_map(~ .x) %>%
map(~ .x %>% select(diam, chl_small, pe))
## end JB
MGL1704_y_list <- map(MGL1704_y_list, as.matrix)
MGL1704_biomass_list <- MGL1704_data %>%
group_by(date) %>%
group_map(~ .x) %>%
map(~ .x %>% select(Qc_sum_per_uL))
class(MGL1704_y_list[[1]])
# Convert each data frame to a numeric vector
MGL1704_biomass_list <- map(MGL1704_biomass_list, function(df) {
# Extract the column from the data frame and convert it to numeric
numeric_vector <- as.numeric(unlist(df))
return(numeric_vector)
})
fit_5 <- kernel_em(MGL1704_y_list, 5, 30, 30, 10, biomass = MGL1704_biomass_list)
plot_data_and_model(MGL1704_y_list, fit_5$zest, fit_5$mu, dim = 1, show_data = FALSE)
plot_pi(fit_5$pi)
plot_biomass(MGL1704_biomass_list, fit_5$resp)
plot_data_and_model(MGL1704_y_list, fit_5$zest, fit_5$mu, dim = 2, show_data = FALSE)
fit_5$mu[, 2, 1]
fit_5$mu[, 2, 2]
fit_5$mu[, 2, 3]
